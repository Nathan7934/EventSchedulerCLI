@startuml

    namespace controllers {

        class UserController [[UserController.html]] {
            +getUserOptions(UserManager): List<UserOption>
            +loginAsAGuest(UserManager): String
            +login(UserManager, String, String): boolean
            +logout(UserManager): void
            +sendMessage(UserManager, ConversationManager, String, ArrayList<Integer>, ConvoType): String
            +replyToConversation(ConversationManager, UserManager, String, int): String
            +deleteConversation(ConversationManager, UserManager, int, int): void
            +archiveConversation(ConversationManager, UserManager, int, int): void
            +markConversationAsUnread(ConversationManager, UserManager, int): void
            +signUpToEvent(UserManager, EventsManager, RoomManager, UUID): String
            +disEnrollToEvent(UserManager, EventsManager, UUID): String
            +getAllEventIds(EventsManager): List<UUID>
            +getAllEvents(EventsManager): List<Event>
            +getSpeakers(EventsManager, UUID): List<UUID>
            +viewEventsByDay(EventsManager, RoomManager, LocalDate): String
            +viewConversations(UserManager, ConversationManager): String
            +viewMessages(UserManager, ConversationManager, int): String
            +viewAllFriends(UserManager): String
            +addFriend(UserManager, String): String
            +removeFriend(UserManager, String): String
            +displayUsersFromIdList(UserManager, List<UUID>): String
            +viewUserRequests(UserRequestManager, UserManager, EventsManager): String
            +addUserRequest(UserRequestManager, UserManager, String, UUID): void
            +markUserRequestAsAddressed(UserRequestManager, int): void
            +getUserName(UserManager, UUID): String
            +statsGetTopEnrolledEvents(EventsManager): HashMap<String, Integer>
            +statsGetTopEnrolledUsers(UserManager): HashMap<String, Integer>
        }

        class OrganizerController [[OrganizerController.html]] {
            +sendMessageToAll(UserManager, ConversationManager, String, UserType): String
            +createNewEvent(RoomManager, EventsManager, UserManager, ConversationManager, String, LocalDateTime, UUID, HashSet<UUID>, int, int, List<RoomFeatures>): String
            +createUser(UserManager, String, String, String, String): String
            +changeUserType(UserManager, String, String, String): String
            +editRoomFeature(RoomManager, UUID, String): String
            +addNewRooms(RoomManager, String, int, int, int): UUID
            +addSpeaker(EventsManager, UUID, UUID): String
            +removeSpeaker(EventsManager, UUID, UUID): String
            +cancelEvent(EventsManager, UserManager, RoomManager, UUID): void
            +changeEventCapacity(EventsManager, UUID, int): String
        }

        class MainController [[MainController.html]] {
            +displayMenu(): void
            +viewUserRequest(): void
            +addressUserRequest(): void
            +serializeAllWhenClose(): void
        }

        class SpeakerController [[SpeakerController.html]] {
            +sendMessageToEventAttendees(EventsManager, UserManager, ConversationManager, String, UUID): String
            +getScheduledTalkIds(UserManager, EventsManager, UUID): List<UUID>
            +viewScheduledTalks(UserManager, EventsManager, RoomManager, UUID): String
            +viewEventAttendees(EventsManager, UserManager, UUID): String
        }

        class VipController [[VipController.html]] {
            +getInterestedEventIds(UserManager): List<UUID>
            +uninterestedInEvent(UserManager, UUID): String
            +interestedInEvent(UserManager, UUID): String
            +viewFavouriteSpeakers(UserManager): String
            +addFavouriteSpeaker(UserManager, UUID): String
            +removeFavouriteSpeaker(UserManager, UUID): String
            +getFavouriteSpeakersIds(UserManager): List<UUID>
        }

        UserController <|-- OrganizerController

        UserController <|-- SpeakerController

        UserController <|-- VipController

    }


    center footer UMLDoclet 1.1.4, PlantUML 1.2019.05
@enduml
